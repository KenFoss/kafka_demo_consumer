package com.kafka.consumer.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProducerSyncAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProducerSyncAllPropertiesEquals(ProducerSync expected, ProducerSync actual) {
        assertProducerSyncAutoGeneratedPropertiesEquals(expected, actual);
        assertProducerSyncAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProducerSyncAllUpdatablePropertiesEquals(ProducerSync expected, ProducerSync actual) {
        assertProducerSyncUpdatableFieldsEquals(expected, actual);
        assertProducerSyncUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProducerSyncAutoGeneratedPropertiesEquals(ProducerSync expected, ProducerSync actual) {
        assertThat(expected)
            .as("Verify ProducerSync auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProducerSyncUpdatableFieldsEquals(ProducerSync expected, ProducerSync actual) {
        assertThat(expected)
            .as("Verify ProducerSync relevant properties")
            .satisfies(e -> assertThat(e.getOwnerName()).as("check ownerName").isEqualTo(actual.getOwnerName()))
            .satisfies(e -> assertThat(e.getProductName()).as("check producerName").isEqualTo(actual.getProductName()))
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProducerSyncUpdatableRelationshipsEquals(ProducerSync expected, ProducerSync actual) {}
}
